getStringで表示するレコードの識別


疑問→リンクタグにgetStringを使う書き方、何をインポートしてメソッドを使うのか


sqlと変数を合わせる

sql = "UPDATE Table SET" 更新処理 "WHERE name" = userName;


更新処理→point =100 などなので、"Content ="+getParameter("text");
（全体適用させたい）


→"Content ="+getParameter("content")+",name ="+getParameter("name")+......


メインのmodelクラスを使う。
必要なのはdaoとmodel(logic)とサーブレットとjsp
jsp→更新画面、パラメータを飛ばす
サーブレット→更新画面とメイン画面へのフォワード、パラメータを受け取ってmodelでdaoに渡す処理
dao→DB接続、sql実行、結果をリストに格納、切断






servlet.jsp
String contnet = request.getParameter("content");
String name = request.getParameter("name");

Content content= new Content(content,name);
updatelogic update = new updatelogid();
update.execute();

forward("/WEB-INF/loginOK");



dao.java

Connection conn =null;

sql="update ";



SQLでレコードの更新だけしたい。リストに格納するとかはいらない。
dao→SQL実行するだけ
サーブレット→jspの内容をdaoに飛ばす
logic→リストから飛ばす？


jspの内容をサーブレットで受け取ってリストに格納、logicでリストを受け取ってリストを返す、daoでリストを受け取って内容をアップデートする



update.jsp
<input type = "text" name="content">

updateservlet.java

String content = request.getParameter("content");
String name = request.getParameter("name");

List<content> list = new ArrayList<content>();

Content content = new Content(content,name);

list.add(content);


dao.jsp
List<content> list = 



疑問→サーブレットで受け取ったパラメータをdaoに渡す方法、logicには何を書けばいいのか、daoでリストからどうやってリストの内容を取得するのか
そもそもリストでパラメータを移動させるべきか

logic→return list
logicはexecuteするもの
logicで使える方法
model,daoに値をセットするhealth.setUser(userName);


サーブレットで受け取ったパラメータをlogic処理

model.java
public class model implements Seriarizable{
private content,name;
public setContent
public setName
public getContent
public getName
}



servlet.java
model model = new model(content,name);
logic logic = new logic();
logic.execute(model);

サーブレットから渡した内容がlogic.javaに渡してdaoで処理される

logic.java
execute(model model){

dao dao = new dao();
dao.update(model);
}

dao.java

sql="update ～";


pStmt.setString(1,model.setComtent());
pStmt.setString(2.model.setName());





jspリンクとテーブルの内容と表示するレコードの内容を合わせる方法


<a href="<%= content.getContent()%>">


・テーブルのtd,trにclass,nameを一つずつ設定しjsでデータを受け取る

name を設定するとしたらfor文の変数を設定する
か、それと同じ方法で設定する

<script type="text/javascript" src="http://ajax.googleapis.com/ajax/libs/jquery/1.10.1/jquery.min.js"></script>
<script type="text/javascript">
$(function() {
 
    $("#btn").click(function(){
 
        $.ajax({
            type: "POST",
		//POST送信を行うファイル名を指定する
            url: "ajax.php",
            data: {
		//ここに送信するデータを設定
		//'user_id':22

                "page": 2
            },
            success: function(j_data){
 
                // 処理を記述
 
            }
        });
 
    });
 
});
</script>





jspに表示させたレコードとリンクとリンク先のレコードを一致させる方法
→PrimaryKeyで一致させる


テーブルデータに数字を付ける
jspリンクをSQLで書く
表示するレコードをキーで持ってくる


リンクにSQLを使うのが謎


SQLはdaoに書く


top.jsp

<a href = "サーブレットを介してdaoに繋げる">更新</a>


updatedao.java


String key = request.getParameter("id");

sql="select from table.table value"


SQLでレコード（ID付き）を取得する


jspに書いたリンクとdaoに書いたSQLを繋げる方法を考える


リンクに適応できる形式によって分かる

daoから何を持ってくるのか→レコードのID

新しくdao、サーブレットを作る？
元々あったdaoの書き方を変える

update.daoの使い道→レコードの更新、IDの取得

メソッドを2個使うならmodel.java、サーブレットの書き方も変わる

SQLにupdateを使うメソッドとselectを使うメソッドを作る

updateメソッドを操作するmodelとサーブレット、selectメソッドを操作するmodelとサーブレット

updateメソッド

sql="update ";


pStmt.setString(1,model.setComtent());
pStmt.setString(2.model.setName());


selectメソッド

List<key> keylist = new ArrayLyst<key>();


sql="select";

while(rs.next()){
String id = rs.getString("primary_key");

Id id = new Id(primary_key);
keylist.add(id);
}


selectmodel.java

puclic List<key> execute(){

updatedao dao = new updatedao();
List<key> keylist = dao.selectmethod();

return keylist;
}


servlet.java

リストを取得してスコープに保存

selectmodel model = new selectmodel();
List<key> list = model.execute();
request.setAttribute("list",list);


update.jsp

id id = (id)seission.getAttribute("list");

<a href= "id.getPrimaryKey()">更新</a>

レコードとリンクはPrimarykeyで一致させたら良い

UPDATE.jspでtop.jspに表示されてるレコードの内容を更新したい。
パラメータ
content,year,month,date,name

update.jspからパラメータをservlet.javaに渡す
servlet.javaでパラメータを受け取って処理（一応スコープに保存）

処理の内容：受け取ったパラメータをリストに入れてdaoに渡す
List<content> list = new ArrayList<contetnt>();
list.add(beans);

daoで受け取ったリストをgetArray
todo：getArrayの使い方を把握する

ArrayListの使い方

List<String> list = new ArrayList<String>();
list.add("1");
list.add("2");
list.add("3");
System.out.println(list);


listの内容を抽出するには
System.out.println(list.get(2));//「3」が出てくる
格納→list.add();　抽出→list.get();

Listの種類としてArrayListがある。

if(list.equals()){
}


list.add();
Javaが持ってるクラス、インターフェースへのメソッドを呼び出す


コレクション
コレクション→List,Set,Map






課題：検索



必要なクラス
beansmodel.java
logicmodel.java
servlet.java
updatedao.java

update.jsp
top.jsp


//////////////
beans.java

padage model:
import java.io.Serializable;

public class Beans implements Serializable{

private String content,name,year,month,date;

public Beans(){}

public Beans(String content,String year,String month,String date,String name){
this.content=content;
this.year=year;
this.month=month;
this.date=date;
this.name=name;
}

public String getContent(){
return content;
}

public String getName(){
return name;
}

public String getYear(){
return year;
}

public String getMonth(){
return month;
}

public String getDate(){
return date;
}

/////////////
logic.java

pacage model;
impoer java.io.Seriarizable;

public class Logcic{
public List<content> execute(Beans be){

Updatedao dao = new Updatedao();


